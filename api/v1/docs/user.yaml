paths:
  /user/register:          
    post:             
      tags:               
        - User           
      summary: 회원가입
      produces:
      - application/json
      parameters:        
      - in: body       
        name: User   
        description: 회원가입
        required: true  
        schema:      
          $ref: '#/definitions/User' 
      responses:     
        200:
          description: 성공적으로 가입. 엑세스토큰 반환
          examples:
            application/json:
              {
                "accessToken": "asd312dsaf13412",
              }
        400:
          description: Post Body 에 변수가 형식이 잘못된 경우
        404:
          description: 유저 아이디 또는 유저 닉네임이 이미 존재할 경우 

  /user/login:      
    post:                 
      tags:               
        - User            
      summary: 로그인
      produces:
      - application/json
      parameters:         
      - in: body       
        schema:
          type: object
          properties:
            userID:
              type: string
            userPassword:
              type: string
          example:  
            userID: "ok@gmail.com"
            userPassword: "1234"
        description: 로그인
      responses:      
        200:
          description: 성공적으로 로그인, 
          examples:
            application/json:
              {
                  "userID": "ok@gmail.com",
                  "userNickName": "ok",
                  "userName": "hehe",
                  "userPhone": "01011112222",
                  "profileImg": "",
                  "refreshToken": "fdasfsadfdsfs",
                  "isAdmin": 0,
                  "placeCount": 0,
                  "reviewCount": 0,
                  "accessToken": "cvbcxbcxvbcxvbcv"
              }
        400:
          description: Post Body 에 변수가 형식이 잘못된 경우
        401:
          description: 비밀번호 틀림
        404:
          description: 유저가 존재하지 않음 

  /user/admin/login:      
    post:                 
      tags:               
        - User            
      summary: 로그인
      produces:
      - application/json
      parameters:         
      - in: body       
        schema:
          type: object
          properties:
            userID:
              type: string
            userPassword:
              type: string
          example:  
            userID: "ok@gmail.com"
            userPassword: "1234"
        description: 로그인
      responses:      
        200:
          description: 성공적으로 로그인, 
          examples:
            application/json:
              {
                  "userID": "ok1@gmail.com",
                  "userNickName": "ok1",
                  "userName": "hehe",
                  "userPhone": "01011112222",
                  "profileImg": "",
                  "refreshToken": "dasfdsfdsap",
                  "isAdmin": 1,
                  "placeCount": 0,
                  "reviewCount": 0,
                  "accessToken": "fadsfsdfsdfasf",
              }
        400:
          description: Post Body 에 변수가 형식이 잘못된 경우
        401:
          description: 비밀번호 틀림
        403:
          description: 관리자가 아님
        404:
          description: 유저가 존재하지 않음 

  /user/:      
    put:                 
      tags:               
        - User            
      summary: 회원정보 수정
      produces:
      - application/json
      parameters:        
      - in: header
        type: http
        scheme: bearer
        name: Authorization
        description : 
          Bearer Auth
      - in: body       
        name: ChangeUser   
        description: 회원정보 수정
        required: true  
        schema:      
          $ref: '#/definitions/ChangeUser' 
      responses:      
        200:
          description: 성공적으로 회원 정보 수정
        204:
          description: 정보수정에 바뀐 내역이 없음 
        400:
          description: Post Body 에 변수가 형식이 잘못된 경우
        404:
          description: 유저가 존재하지 않음 
        409:
          description: 유저 닉네임이 이미 존재함 

  /user/reset:      
    post:                 
      tags:               
        - User            
      summary: 비밀번호 수정
      produces:
      - application/json
      parameters:         
      - in: body       
        schema:
          type: object
          properties:
            userID:
              type: string
            userPassword:
              type: string
          example:  
            userID: "ok@gmail.com"
            userPassword: "1234"
        description: 비밀번호 수정
      responses:      
        200:
          description: 성공적으로 로그인, 
        400:
          description: Post Body 에 변수가 형식이 잘못된 경우
        403:
          description: 이메일 인증 안됨

  /user/best/{page}/{parseNum}:      
    get:                 
      tags:               
        - User            
      summary: 유저랭킹 가져옴 
      produces:
      - application/json
      parameters:         
      - in: path       
        name: page   
        schema:
          type: number
        description: 페이지
        required: true  
      - in: path       
        name: parseNum   
        schema:
          type: number
        description: 한번에 몇개씩 가져올지
        required: true  
      responses:      
        200:
          description: 성공적으로 겟 
          examples:
            application/json:
              [
                {
                    "userID": "ok6@gmail.com",
                    "userNickName": "updated User NickName",
                    "profileImg": "",
                    "userName": "hehe",
                    "userPhone": "01011112222",
                    "placeCount": 2,
                    "reviewCount": 0
                },
              ]
        400:
          description: Post Body 에 변수가 형식이 잘못된 경우

  /user/report/community:      
    post:                 
      tags:               
        - User            
      summary: 유저가 게시글을 신고함
      produces:
      - application/json
      parameters:         
      - in: body       
        schema:
          type: object
          properties:
            userID:
              type: string
            userPassword:
              type: number
          example:  
            userID: "ok@gmail.com"
            id: 3
      responses:      
        200:
          description: 성공적으로 메일을 보냄
        400:
          description: Post Body 에 변수가 형식이 잘못된 경우
        401:
          description: 토큰인증 안됨
        404:
          description: 해당 글을 찾지 못함


definitions:        # Schema defination for request body
  User:
    type: object
    properties:
      userID:
        type: string
      userPassword:
        type: string
      userNickName:
        type: string
      userName:
        type: string
      userPhone:
        type: string
    example:
      userID : 'ok6@gmail.com'
      userPassword : '1234'
      userNickName : 'ok6'
      userName : 'hehe'
      userPhone : '01011112222'

  ChangeUser:
    type: object
    properties:
      userNickName:
        type: string
      userName:
        type: string
      userPhone:
        type: string
    example:
      userNickName : 'updated User NickName'
      userName : 'hehe'
      userPhone : '01011112222'