paths:
  /review:          
    post:             
      tags:               
        - Review           
      summary: Review 등록
      produces:
      - application/json
      parameters:        
      - in: header
        type: http
        scheme: bearer
        name: Authorization
        description : 
          Bearer Auth
      - in: body       
        name: Review   
        description: 리뷰 등록
        required: true  
        schema:      
          $ref: '#/definitions/Review' 
      responses:     
        200:
          description: 등록 성공, reviewID 반환
        400:
          description: Post body 변수 형식 잘못됨
        404:
          description: 리뷰를 등록하려는 placeID가 존재하지 않음

  /review/place/{placeID}/{page}: 
    get:             
      tags:               
        - Review           
      summary: 리뷰 해당 차박지에 따라서 얻기
      produces:
      - application/json
      parameters:        
      - in: header
        type: http
        scheme: bearer
        name: Authorization
        description : 
          Bearer Auth
      - in: path       
        name: placeID   
        description: 리뷰를 조회하려는 차박지 아이디
        required: true  
      - in: path       
        name: page   
        description: 해당 페이지 조회
        required: true  
      responses:     
        200:
          description: review 리스트 반환
        400:
          description: Get 파라미터가 형식이 잘못된 경우(error message에 detail 있음)

  /review/{page}:      
    get:                 
      tags:               
        - Review            
      summary: 그냥 리뷰 등록순으로 가져옴
      produces:
      - application/json
      parameters:        
      - in: header
        type: http
        scheme: bearer
        name: Authorization
        description : 
          Bearer Auth
      - in: path       
        name: page   
        description: 해당 페이지 조회
        required: true  
      responses:      
        200:
          description: review 리스트 반환
        400:
          description: Get 파라미터가 형식이 잘못된 경우(error message에 detail 있음)

  /review/user/{userID}/{page}:      
    get:                 
      tags:               
        - Review            
      summary: 해당 유저가 등록한 리뷰를 순서대로 조회
      produces:
      - application/json
      parameters:        
      - in: header
        type: http
        scheme: bearer
        name: Authorization
        description : 
          Bearer Auth
      - in: path       
        name: userID   
        description: 조회하려는 userID
        required: true 
      - in: path       
        name: page   
        description: 해당 페이지 조회
        required: true  
      responses:      
        200:
          description: review 리스트 반환
        400:
          description: Get 파라미터가 형식이 잘못된 경우

  /review/like/{page}:      
    get:                 
      tags:               
        - Review            
      summary: 좋아요 순서대로 리뷰 조회
      produces:
      - application/json
      parameters:        
      - in: header
        type: http
        scheme: bearer
        name: Authorization
        description : 
          Bearer Auth
      - in: path       
        name: page   
        description: 해당 페이지 조회
        required: true  
      responses:      
        200:
          description: review 리스트 반환
        400:
          description: Get 파라미터가 형식이 잘못된 경우

  /review/rank/{page}:      
    get:                 
      tags:               
        - Review            
      summary: 리뷰 전체 랭킹으로 5위까지 겟 
      produces:
      - application/json
      parameters:        
      - in: header
        type: http
        scheme: bearer
        name: Authorization
        description : 
          Bearer Auth
      - in: path       
        name: page   
        description: 해당 페이지 조회, 0 이면 1 ~ 5 위까지 겟, page의 값에 따라서 스킵 
        required: true  
      responses:      
        200:
          description: review 리스트 likeCount + replyCount 를 기준으로 겟 
          examples:
            application/json:
              [
                {
                  "reviewID": 5,
                  "FK_REVIEW_placeID": 2,
                  "content": "updated content haha",
                  "updated": "2021-01-28T07:05:12.000Z",
                  "FK_REVIEW_userID": "ok@gmail.com",
                  "point": 5,
                  "likeCount": 2,
                  "imageKey": "asdasd,vasgrae,hdhydth",
                  "replyCount": 6,
                  "userNickName": "updated NickName okk",
                  "profileImg": "",
                  "placeName": "X4C 2Q6",
                  "resizedImages": [
                      "https://chaback-bucket.s3.ap-northeast-2.amazonaws.com/images/resize/ok@gmail.com/asdasd",
                      "https://chaback-bucket.s3.ap-northeast-2.amazonaws.com/images/resize/ok@gmail.com/vasgrae",
                      "https://chaback-bucket.s3.ap-northeast-2.amazonaws.com/images/resize/ok@gmail.com/hdhydth"
                  ],
                  "originalImages": [
                      "https://chaback-bucket.s3.ap-northeast-2.amazonaws.com/images/original/ok@gmail.com/asdasd",
                      "https://chaback-bucket.s3.ap-northeast-2.amazonaws.com/images/original/ok@gmail.com/vasgrae",
                      "https://chaback-bucket.s3.ap-northeast-2.amazonaws.com/images/original/ok@gmail.com/hdhydth"
                  ]
                },
              ]
        400:
          description: Get 파라미터가 형식이 잘못된 경우

  /review/best/{placeID}/{page}:      
    get:                 
      tags:               
        - Review            
      summary: 리뷰 차박지에 따라서 베스트 리뷰 5위까지 겟 
      produces:
      - application/json
      parameters:        
      - in: header
        type: http
        scheme: bearer
        name: Authorization
        description : 
          Bearer Auth
      - in: path       
        name: placeID   
        description: 차박지 아이디
        required: true
      - in: path       
        name: page   
        description: 해당 페이지 조회, 0 이면 1 ~ 5 위까지 겟, page의 값에 따라서 스킵 
        required: true  
      responses:      
        200:
          description: review 리스트 likeCount + replyCount 를 기준으로 겟 
          examples:
            application/json:
              [
                {
                    "reviewID": 10,
                    "FK_REVIEW_placeID": 3,
                    "content": "post review to place ID 2",
                    "updated": "2021-01-06T15:00:00.000Z",
                    "FK_REVIEW_userID": "ok@gmail.com",
                    "point": 3,
                    "likeCount": 3,
                    "imageKey": "a",
                    "replyCount": 0,
                    "userNickName": "updated NickName okk",
                    "profileImg": "",
                    "resizedImages": [
                        "https://chaback-bucket.s3.ap-northeast-2.amazonaws.com/images/resize/ok@gmail.com/a"
                    ],
                    "originalImages": [
                        "https://chaback-bucket.s3.ap-northeast-2.amazonaws.com/images/original/ok@gmail.com/a"
                    ]
                },
              ]
        400:
          description: Get 파라미터가 형식이 잘못된 경우

  /review/{reviewID}/{placeID}:      
    put:                 
      tags:               
        - Review            
      summary: 리뷰 수정
      produces:
      - application/json
      parameters:         
      - in: header
        type: http
        scheme: bearer
        name: Authorization
        description : 
          Bearer Auth
      - in: path       
        name: placeID   
        description: 수정하려는 리뷰의 차박지 placeID
        required: true 
      - in: path       
        name: reviewID   
        description: 수정하려는 reviewID
        required: true 
      - in: body       
        name: ChangePlace   
        description: 차박지 정보 수정
        required: true  
        schema:      
          $ref: '#/definitions/ChangeReview' 
      responses:      
        200:
          description: 성공적으로 수정, 
        400:
          description: 변수가 형식이 잘못된 경우
        404:
          description: 해당 유저가 등록한 reviewID를 찾지 못함 또는 해당 placeID를 찾지 못함

  /review/{reviewIDtoDelete}:     
    delete:                 
      tags:               
        - Review            
      summary: 리뷰 삭제
      produces:
      - application/json
      parameters:         
      - in: header
        type: http
        scheme: bearer
        name: Authorization
        description : 
          Bearer Auth
      - in: path       
        name: reviewIDtoDelete   
        description: 삭제하려는 reviewID
        required: true 
      responses:      
        200:
          description: 성공적으로 삭제, 
        400:
          description: 변수가 형식이 잘못된 경우
        401:
          description: 토큰인증 실패
        404:
          description: 해당 유저가 등록한 리뷰를 찾지 못함

definitions:      
  Review:
    type: object
    properties:
      placeID:
        type: string
      content:
        type: string
      point:
        type: int
      imageKey:
        type: string
    example:
      placeID : 2
      content : post review to place ID 2
      point : 3
      imageKey : ['a','b','c']

  ChangeReview:
    type: object
    properties:
      content:
        type: string
      point:
        type: int
      pointGap:
        type: int
        description: 현재 점수 - 과거 점수
      imageKey:
        type: int
    example:
        content : 'updated content haha'
        point : 5
        pointGap : 2
        imageKey : ['asdasd','vasgrae','hdhydth']